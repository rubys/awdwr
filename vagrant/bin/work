#
# Change directory, ruby version, and checkout the branches associated
# with the specified version of [book, ruby, rails].
#
test "$(uname)" == "Darwin" && unset -f cd # disable /etc/bashrc_Apple_Terminal 
dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

export GORP_RAILS=$HOME/git/rails

if [[ "$@" = "book" ]]; then
  set svn 42 215
fi

if [[ "$@" = "gems" ]]; then
  ruby $HOME/git/awdwr/environment.rb
  return 0
fi

if [[ -e ~/.rbenv && `uname` = 'Darwin' ]]; then
  unset rvm_version
  unset rvm_path
fi

if [[ -n "$rvm_path" ]]; then
  if test -f $rvm_path/scripts/rvm; then
    [ "$(type -t rvm)" = "function" ] || source $rvm_path/scripts/rvm
  fi
  rvm use system > /dev/null
else
  export RBENV_VERSION=system
fi

eval $(ruby <<__return
  require 'yaml'

  dir = File.expand_path('$dir')
  while dir != '/'
    if File.exist? "#{dir}/testrails.yml"
      testrails = YAML.load_file("#{dir}/testrails.yml")
      break
    end
    dir = File.dirname(dir)
  end

  git = testrails['git'] || '$HOME/git'

  require 'shellwords'
  require "#{git}/awdwr/environment"

  # read configuration
  profile = AWDWR::config(testrails, %($@))
  puts "ruby=#{Shellwords.escape(profile['ruby']['bin'])};"

  # change to the target directory
  puts "cd #{profile['source']}/#{profile['work']};"
  puts 'export GORP_WORK=$' + '(pwd);'

  # change to the desired rails branch
  Dir.chdir '$GORP_RAILS' do
    STDERR.write "\033[34mrails\033[00m: "
    system "git checkout #{profile['branch']} > /dev/null"
  end

  # set up an alias for rails
  if File.exist? "$GORP_RAILS/railties/exe/rails"
    puts 'alias rails="ruby $GORP_RAILS/railties/exe/rails";'
  elsif File.exist? "$GORP_RAILS/railties/bin/rails"
    puts 'alias rails="ruby -rubygems $GORP_RAILS/railties/bin/rails";'
  elsif File.exist? "$GORP_RAILS/bin/rails"
    puts 'alias rails="ruby -rubygems $GORP_RAILS/bin/rails";'
  end

  # infer dependencies
  gems = AWDWR::dependencies("#{git}/rails", RUBY_VERSION)

  # fetch the desired branch for each dependency
  gems.sort.each do |lib, options|
    next unless options[:github] || options[:git]
    next if lib == 'rails'
    STDERR.write "\033[34m#{lib}\033[00m: "
    Dir.chdir "#{git}/#{lib}" do
      system "git checkout #{options[:branch] || 'master'} > /dev/null"
    end
  end

  # reload rvm if necessary
  if ENV['rvm_version']
    disk_version = File.read("#{ENV['rvm_path']}/VERSION").chomp
    disk_version += ' (' + File.read("#{ENV['rvm_path']}/RELEASE").chomp + ')'
    puts "export rvm_reload=1" if ENV['rvm_version'] != disk_version
  end

  # set up rubylibs
  libs = gems.select {|gem, opts| opts[:git] || opts[:github]}
  puts "export RUBYLIB=#{libs.map {|lib, opts| "#{git}/#{lib}/lib"}.join(':')}:$GORP_RAILS/activesupport/lib"
__return
)

# reload RVM if necessary
if [[ -n "$rvm_reload" ]]; then
  echo -n -e "\033[35;1m"
  rvm reload
  echo -n -e "\033[0m"
fi

# select desired ruby
if [[ -n "$ruby" ]]; then
  if [[ -n "$rvm_path" ]]; then
    unset rvm_ruby_sha
    [[ -e $rvm_path/rvm/scripts/rvm ]] && source $rvm_path/rvm/scripts/rvm
    ruby=$(cd $rvm_path/rubies; ls -trd $ruby | tail -1)
    rvm use $ruby
  else
    rbenv=${RBENV_ROOT:-~/.rbenv}
    first=$(echo $PATH | cut -d ':' -f 1)
    test "$first" != "$rbenv/shims" && export PATH=$rbenv/shims:$PATH
    ruby=$(echo $ruby | sed s/^ruby-//)
    export RBENV_VERSION=$(cd $rbenv/versions; ls -trd $ruby | tail -1)
    echo -n -e "\033[32mUsing "
    ruby -v
    echo -n -e "\033[0m"
  fi
fi

unset ruby dir rvm_reload

if [[ "$@" = "depot" ]]; then
  cd depot
fi
